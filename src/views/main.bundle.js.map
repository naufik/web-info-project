{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/soon/soon.component.css","./src/app/soon/soon.component.html","./src/app/soon/soon.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,mB;;;;;;;ACAA,iD;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAAA;IAEA,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAGM;AACO;AActD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,2EAAa;aACd;YACD,OAAO,EAAE;gBACP,gFAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;ACnBtB,mB;;;;;;;ACAA,mF;;;;;;;;;;;;;;;;;;;ACAkD;AAKjD,CAAC;AAOF;IAEC;QAEC;;UAEC;QACK,YAAO,GAAe;YAC7B;gBACC,IAAI,EAAE,uBAAuB;gBAC7B,MAAM,EAAE,QAAQ;aAChB;SAAC,CAAC;IATa,CAAC;IAWjB;;;;MAIE;IACM,qCAAa,GAApB,UAAsB,QAAgB;QACtC,MAAM,CAAC,oBAAoB,GAAG,QAAQ,CAAC;IACxC,CAAC;IApBW,aAAa;QALzB,wEAAS,CAAC;YACV,QAAQ,EAAE,MAAM;;;SAGhB,CAAC;;OACW,aAAa,CAqBzB;IAAD,oBAAC;CAAA;AArByB;;;;;;;;;ACZ1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div>\\n  <soon></soon>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { SoonComponent } from './soon/soon.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SoonComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/soon/soon.component.css\n// module id = ./src/app/soon/soon.component.css\n// module chunks = main","module.exports = \"<h1 [style.font-family]=\\\"'sans serif'\\\">\\n\\tComing Soon!\\n</h1>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/soon/soon.component.html\n// module id = ./src/app/soon/soon.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\ninterface UserData { \n\tname: string,\n\tgithub?: string \n};\n\n@Component({\n\tselector: 'soon',\n\ttemplateUrl: './soon.component.html',\n\tstyleUrls: ['./soon.component.css']\n})\nexport class SoonComponent {\n\t\n\tconstructor() { }\n\n \t/** \n\t\t@todo add your own data here, WebStorm will complain if the data is in the wrong format thank to TypeScript type-checking. \n\t*/\n\tpublic members: UserData[] = [\n\t{\n\t\tname: \"Naufal Fikri Setiawan\",\n\t\tgithub: \"naufik\"\n\t}];\n\t\n\t/**\n\t\tMethod to obtain the github link of a given username.\n\n\t\t@param username the username of the user.\n\t*/\t\n \tpublic getGithubLink (username: string): string {\n\t\treturn \"http://github.com/\" + username;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/soon/soon.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}